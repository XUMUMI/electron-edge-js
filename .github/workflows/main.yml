name: Build and Test

on: 
  push:
    branches-ignore:
      - 'circleci'
    paths-ignore:
      - 'samples/*'
      - 'stress/*'
      - 'performance/*'
      - '.github/FUNDING.YML'
      - '**/*.md'
      - '**/*.d.ts'
      - '**/*.bat'
      - '.travis.yml'
      - 'Dockerfile'
      - '.gitconfig'
      - '.gitignore'
      - 'appveyor*.*'
      - 'LICENSE*'
      - '.idea/**'
      - '.vscode/**'
      - '*.bat'
      - '*.nuspec'
      - 'tools/nuget/*'
      - '.npmignore'
      - 'test/config.json'
      - 'test/double'
      - '.circleci'
      - '.circleci/*'
      - 'README.md'


env:
  ACTIONS_ALLOW_UNSECURE_COMMANDS: true # required to setup CSC
  DOTNET_CLI_TELEMETRY_OPTOUT: 1 

jobs:
  build-test:
    runs-on: ${{ matrix.os }}
    name: build-test-${{ matrix.os }}-electron-${{ matrix.electron }}
    strategy:
      matrix:
        # os: [macos-14, macos-latest, ubuntu-latest, windows-2019]
        os: [ ubuntu-latest]
        # electron: [30.5.0, 31.6.0]
        electron: [30.5.0, 31.6.0]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup NodeJS
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: package-lock.json
      
      - name: Cache node modules
        id: cache-nodemodules
        uses: actions/cache@v4
        env:
          cache-name: cache-node-modules
        with:
          path: node_modules
          key: ${{ matrix.os }}-${{ matrix.electron }}-${{ hashFiles('package-lock.json') }}

      - name: Setup dotnet
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x' # SDK Version to use; x will use the latest version of the 8.0 channel

      - name: Versions
        run: node -v && npm -v && dotnet --version && node -p process.platform && node -p process.arch

      - name: setup electorn version
        run: |
          sed -i -e 's/"electron": "=31.6.0"/"electron": "=${{ matrix.electron }}"/g' package.json

      - name: npm install
        run: npm i --no-audit
        env:
          DOTNET_CLI_TELEMETRY_OPTOUT: 1

      - if: runner.os == 'macOS' || runner.os == 'Linux'
        name: Check electron-edge-js build
        id: check_build
        uses: andstor/file-existence-action@v3
        with:
          files: "build/Release/edge_coreclr.node"

      - if: runner.os == 'Windows'
        name: Run .NET 4.5 tests
        run: node tools/test.js CI

      - if: runner.os == 'macOS'
        name: "Run .net core tests"
        run: |
          if: steps.check_build.outputs.files_exists == 'false'
          echo "Failed to build electron-edge-js for Electron ${{ matrix.electron }}"
          exit 1
          if: steps.check_build.outputs.files_exists == 'true'
          node tools/test.js CI
        env:
          EDGE_USE_CORECLR: 1

      - if: runner.os == 'Linux'
        name: "Run .net core tests"
        run: |
          if: steps.check_build.outputs.files_exists == 'false'
          echo "Failed to build electron-edge-js for Electron ${{ matrix.electron }}"
          exit 1
          if: steps.check_build.outputs.files_exists == 'true'
          export DISPLAY=:99
          echo "DISPLAY=:99" >> $GITHUB_ENV
          Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
          sleep 3
          node tools/test.js CI
        env:
          EDGE_USE_CORECLR: 1

      - name: Upload artifacts
        uses: actions/upload-artifact@v4.3.3
        if: success()
        with:
          name: ${{ matrix.os }}-${{ matrix.electron }}
          path: |
            test/mochawesome-report/test-results-coreclr.json
            test/mochawesome-report/test-results-coreclr.html

      # - name: Upload artifacts
      #   uses: actions/upload-artifact@v4.3.3
      #   if: success()
      #   with:
      #     name: ${{ matrix.os }}-${{ matrix.node }}
      #     path: |
      #       test-results.xml
      #       mochawesome.json
      # - name: Test Report
      #   uses: phoenix-actions/test-reporting@v15
      #   if: success()
      #   with:
      #     name: test-results-${{ matrix.os }}-node-${{ matrix.node }}
      #     fail-on-error: true
      #     path: mochawesome.json   # Path to test results
      #     reporter: mochawesome-json 

