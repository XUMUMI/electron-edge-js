name: Test

on: 
  push:
    branches-ignore:
      - 'circleci'
    paths-ignore:
      - 'samples/*'
      - 'stress/*'
      - 'performance/*'
      - '.github/FUNDING.YML'
      - '.github/workflows/build.yml'
      - '**/*.md'
      - '**/*.d.ts'
      - '**/*.bat'
      - '.travis.yml'
      - 'Dockerfile'
      - '.gitconfig'
      - '.gitignore'
      - 'appveyor*.*'
      - 'LICENSE*'
      - '.idea/**'
      - '.vscode/**'
      - '*.bat'
      - '*.nuspec'
      - 'tools/nuget/*'
      - '.npmignore'
      - 'test/config.json'
      - 'test/double'
      - '.circleci'
      - '.circleci/*'
      - 'README.md'


env:
  ACTIONS_ALLOW_UNSECURE_COMMANDS: true # required to setup CSC
  DOTNET_CLI_TELEMETRY_OPTOUT: 1 

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        # os: [macos-13, macos-14, ubuntu-22.04, windows-2022]
        os: [ windows-2022,  ubuntu-22.04]
        electron: [30.5.1]
        # electron: [29.4.6, 30.5.1, 31.6.0]
        # electron: [31.6.0, 32.1.0]
        
    name: test-${{ matrix.os }}-v${{ matrix.electron }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup env
        uses: ./.github/actions/setup-env
        with:
          electron: ${{ matrix.electron }}
          replace-version: true

      - if: runner.os == 'macOS' || runner.os == 'Linux'
        name: Check electron-edge-js build file
        id: check_build
        uses: andstor/file-existence-action@v3
        with:
          files: "build/Release/edge_coreclr.node"
          fail: true
          ignore_case: true

      - if: runner.os == 'Windows'
        name: Run Windows tests
        uses: ./.github/actions/test-windows
        with:
          electron: ${{ matrix.electron }}

      - if: runner.os == 'macOS'
        name: "Run .net core tests macOS"
        run: node tools/test.js CI
        timeout-minutes: 10
        # env:
        #   EDGE_USE_CORECLR: 1

      - if: runner.os == 'Linux'
        name: "Run .net core tests Linux"
        timeout-minutes: 10
        run: |
          export DISPLAY=:99
          echo "DISPLAY=:99" >> $GITHUB_ENV
          Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
          sleep 3
          node tools/test.js CI
        # env:
        #   EDGE_USE_CORECLR: 1

      - name: Test report
        uses: ./.github/actions/create-test-report
        with:
          electron: ${{ matrix.electron }}
          os: ${{ matrix.os }}

      # - name: "Merge test files"
      #   run: node tools/mergeTests.js

      # - name: Upload artifacts
      #   uses: actions/upload-artifact@v4
      #   if: success()
      #   with:
      #     name: ${{ matrix.os }}-${{ matrix.electron }}
      #     path: |
      #       test/mochawesome-report/mochawesome.json
      #       test/mochawesome-report/mochawesome.html

      # - name: Create test report
      #   uses: phoenix-actions/test-reporting@v15
      #   if: success()
      #   with:
      #     name: test-results-${{ matrix.os }}-v${{ matrix.electron }}
      #     fail-on-error: true
      #     path: test/mochawesome-report/mochawesome.json   # Path to test results
      #     reporter: mochawesome-json 

