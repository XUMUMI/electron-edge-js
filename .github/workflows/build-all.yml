name: Build All

on:
  workflow_dispatch:

env:
  ACTIONS_ALLOW_UNSECURE_COMMANDS: true 
  DOTNET_CLI_TELEMETRY_OPTOUT: 1 
  DOTNET_NOLOGO: 1

jobs:
  build:
    runs-on: ${{ matrix.os }}
    outputs:
      test-version: ${{ steps.electron-test-version.outputs.test-version }}
    strategy:
      # fail-fast: false
      matrix:
        electron: [29, 30, 31, 32, 33]
        os: [windows-2022]
       
    name: build ${{ matrix.os }}-v${{ matrix.electron }}
    steps:

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Resolve Electron version for test
        id: electron-test-version
        uses: ./.github/actions/get-electron-version
        with:
          electron: '${{ matrix.electron }}'

      - name: Setup env
        uses: ./.github/actions/setup-env
        with:
          electron: '${{ matrix.electron }}.0.0'
          os: ${{ matrix.os }}
   
      - name: install node-gyp
        run: npm i -g node-gyp

      - name: Create release folder
        run: |
            mkdir "release\ia32\${{ matrix.electron }}.0.0"
            mkdir "release\x64\${{ matrix.electron }}.0.0"
            mkdir "release\arm64\${{ matrix.electron }}.0.0"

      - name: Build ia32
        timeout-minutes: 30
        uses: ./.github/actions/build-ia32
        with:
          electron: ${{ matrix.electron }}

      - name: Build x64
        timeout-minutes: 30
        uses: ./.github/actions/build-x64
        with:
          electron: ${{ matrix.electron }}

      - name: Build arm64
        timeout-minutes: 30
        uses: ./.github/actions/build-arm64
        with:
          electron: ${{ matrix.electron }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        if: success()
        with:
          name: electron-edge-js-${{ matrix.electron }}.0.0
          path: |
            release

  test:
    runs-on: ${{ matrix.os }}
    needs: build
    strategy:
      matrix:
        os: [windows-2022]
      # fail-fast: false

    name: test ${{ matrix.os }}-v${{ needs.build.outputs.test-version }}
    steps:
      
      - name: Test build
        uses: ./.github/actions/test-build
        with:
          electron: ${{ needs.build.outputs.test-version }}
          os: ${{ matrix.os }}
  
    