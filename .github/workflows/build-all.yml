name: Build All

on:
  workflow_dispatch:

env:
  ACTIONS_ALLOW_UNSECURE_COMMANDS: true 
  DOTNET_CLI_TELEMETRY_OPTOUT: 1 
  DOTNET_NOLOGO: 1

jobs:
  build:
    runs-on: ${{ matrix.os }}
    outputs:
      # test-version: ${{ steps.electron-test-version.outputs.test-version }}
      matrix: ${{ steps.electron-test-versions.outputs.matrix }}
    strategy:
      # fail-fast: false
      matrix:
        # electron: [29, 30, 31, 32, 33]
        electron: [32, 33]
        os: [windows-2022]
       
    name: build ${{ matrix.os }}-electron-${{ matrix.electron }}
    steps:

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Resolve Electron versions from major
        shell: bash
        id: electron-test-versions
        run: echo "matrix={\"include\":[{\"electron\":\"29.4.6\", \"os\":\"windows-2022\"},{\"electron\":\"30.5.1\", \"os\":\"windows-2022\"},{\"electron\":\"31.7.2\", \"os\":\"windows-2022\"},{\"electron\":\"32.2.2\", \"os\":\"windows-2022\"},{\"electron\":\"33.0.2\", \"os\":\"windows-2022\"}]}" >> $GITHUB_OUTPUT
      
      # - name: Setup env
      #   uses: ./.github/actions/setup-env
      #   with:
      #     electron: '${{ matrix.electron }}.0.0'
      #     os: ${{ matrix.os }}
   
      # - name: install node-gyp
      #   run: npm i -g node-gyp

      # - name: Create release folder
      #   run: |
      #       mkdir "release\ia32\${{ matrix.electron }}.0.0"
      #       mkdir "release\x64\${{ matrix.electron }}.0.0"
      #       mkdir "release\arm64\${{ matrix.electron }}.0.0"

      # - name: Build ia32
      #   timeout-minutes: 30
      #   uses: ./.github/actions/build
      #   with:
      #     electron: ${{ matrix.electron }}
      #     arch: 'ia32'

      # - name: Build x64
      #   timeout-minutes: 30
      #   uses: ./.github/actions/build
      #   with:
      #     electron: ${{ matrix.electron }}
      #     arch: 'x64'

      # - name: Build arm64
      #   timeout-minutes: 30
      #   uses: ./.github/actions/build
      #   with:
      #     electron: ${{ matrix.electron }}
      #     arch: 'arm64'
    
      # - name: Upload artifacts
      #   uses: actions/upload-artifact@v4
      #   if: success()
      #   with:
      #     name: electron-edge-js-${{ matrix.electron }}.0.0
      #     path: |
      #       release

  test:
    strategy:
      matrix: ${{ fromJSON(needs.build.outputs.matrix) }}
    runs-on: ${{ matrix.os }}
    needs: build
      # fail-fast: false

    name: test ${{ matrix.os }}-v${{ matrix.electron }}
    steps:

      - name: Checkout code
        uses: actions/checkout@v4

      # - name: Test build
      #   uses: ./.github/actions/test-build
      #   with:
      #     electron: ${{ matrix.electron }}
      #     os: ${{ matrix.os }}
  
    